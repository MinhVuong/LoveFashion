package com.example.entity;
// Generated Dec 24, 2015 9:04:21 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CatalogProductEntity generated by hbm2java
 */
@Entity
@Table(name = "catalog_product_entity", catalog = "lovefashion")
public class CatalogProductEntity implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int entityId;
	private String name;
	private String typeId;
	private String sku;
	private Integer taxClassId;
	private	double price;
	private String material;
	private String climate;
	private String pattern;
	private String collar;
	private String sleeve;
	private String active;
	private BigDecimal weight;
	private Integer manufacturer;
	private String manufacturerValue;
	private String metaDescription;
	private String metaKeyword;
	private String metaTitle;
	private String description;
	private String urlKey;
	private String urlPath;
	private Date createdAt;
	private Date updatedAt;
	private Short isNew;
	private Short status;
	private Date newsFromDate;
	private Date newsToDate;
	private Integer color;
	private String colorValue;
	private Integer size;
	private String sizeValue;
	private String image;
	private String imageLabel;
	private Short sale;
	private double specialPrice;
	private Date specialFromDate;
	private Date specialToDate;
	private Set<SalesBestsellersAggregatedYearly> salesBestsellersAggregatedYearlies = new HashSet<SalesBestsellersAggregatedYearly>(
			0);
	private Set<CatalogProductEntity> catalogProductEntitiesForParentId = new HashSet<CatalogProductEntity>(0);
	private Set<SalesBestsellersAggregatedMonthly> salesBestsellersAggregatedMonthlies = new HashSet<SalesBestsellersAggregatedMonthly>(
			0);
	private Set<CatalogProductEntityGallery> catalogProductEntityGalleries = new HashSet<CatalogProductEntityGallery>(
			0);
	private Set<SalesBestsellersAggregatedDaily> salesBestsellersAggregatedDailies = new HashSet<SalesBestsellersAggregatedDaily>(
			0);
	private Set<CataloginventoryStockStatus> cataloginventoryStockStatuses = new HashSet<CataloginventoryStockStatus>(
			0);
	private Set<WishlistItem> wishlistItems = new HashSet<WishlistItem>(0);
	private Set<CatalogProductEntity> catalogProductEntitiesForChildId = new HashSet<CatalogProductEntity>(0);
	private Set<CatalogCategoryEntity> catalogCategoryEntities = new HashSet<CatalogCategoryEntity>(0);
	private Set<CataloginventoryStockItem> cataloginventoryStockItems = new HashSet<CataloginventoryStockItem>(0);

	public CatalogProductEntity() {
	}

	public CatalogProductEntity(int entityId, String typeId) {
		this.entityId = entityId;
		this.typeId = typeId;
	}

	public CatalogProductEntity(int entityId, String name, String typeId, String sku, Integer taxClassId,
			double price, String material, String climate, String pattern, String collar, String sleeve,
			String active, BigDecimal weight, Integer manufacturer, String manufacturerValue, String metaDescription,
			String metaKeyword, String metaTitle, String description, String urlKey, String urlPath, Date createdAt,
			Date updatedAt, Short isNew, Short status, Date newsFromDate, Date newsToDate, Integer color,
			String colorValue, Integer size, String sizeValue, String image, String imageLabel, Short sale,
			double specialPrice, Date specialFromDate, Date specialToDate,
			Set<SalesBestsellersAggregatedYearly> salesBestsellersAggregatedYearlies,
			Set<CatalogProductEntity> catalogProductEntitiesForParentId,
			Set<SalesBestsellersAggregatedMonthly> salesBestsellersAggregatedMonthlies,
			Set<CatalogProductEntityGallery> catalogProductEntityGalleries,
			Set<SalesBestsellersAggregatedDaily> salesBestsellersAggregatedDailies,
			Set<CataloginventoryStockStatus> cataloginventoryStockStatuses, Set<WishlistItem> wishlistItems,
			Set<CatalogProductEntity> catalogProductEntitiesForChildId,
			Set<CatalogCategoryEntity> catalogCategoryEntities,
			Set<CataloginventoryStockItem> cataloginventoryStockItems) {
		this.entityId = entityId;
		this.name = name;
		this.typeId = typeId;
		this.sku = sku;
		this.taxClassId = taxClassId;
		this.price = price;
		this.material = material;
		this.climate = climate;
		this.pattern = pattern;
		this.collar = collar;
		this.sleeve = sleeve;
		this.active = active;
		this.weight = weight;
		this.manufacturer = manufacturer;
		this.manufacturerValue = manufacturerValue;
		this.metaDescription = metaDescription;
		this.metaKeyword = metaKeyword;
		this.metaTitle = metaTitle;
		this.description = description;
		this.urlKey = urlKey;
		this.urlPath = urlPath;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.isNew = isNew;
		this.status = status;
		this.newsFromDate = newsFromDate;
		this.newsToDate = newsToDate;
		this.color = color;
		this.colorValue = colorValue;
		this.size = size;
		this.sizeValue = sizeValue;
		this.image = image;
		this.imageLabel = imageLabel;
		this.sale = sale;
		this.specialPrice = specialPrice;
		this.specialFromDate = specialFromDate;
		this.specialToDate = specialToDate;
		this.salesBestsellersAggregatedYearlies = salesBestsellersAggregatedYearlies;
		this.catalogProductEntitiesForParentId = catalogProductEntitiesForParentId;
		this.salesBestsellersAggregatedMonthlies = salesBestsellersAggregatedMonthlies;
		this.catalogProductEntityGalleries = catalogProductEntityGalleries;
		this.salesBestsellersAggregatedDailies = salesBestsellersAggregatedDailies;
		this.cataloginventoryStockStatuses = cataloginventoryStockStatuses;
		this.wishlistItems = wishlistItems;
		this.catalogProductEntitiesForChildId = catalogProductEntitiesForChildId;
		this.catalogCategoryEntities = catalogCategoryEntities;
		this.cataloginventoryStockItems = cataloginventoryStockItems;
	}

	@Id

	@Column(name = "entity_id", unique = true, nullable = false)
	public int getEntityId() {
		return this.entityId;
	}

	public void setEntityId(int entityId) {
		this.entityId = entityId;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "type_id", nullable = false, length = 32)
	public String getTypeId() {
		return this.typeId;
	}

	public void setTypeId(String typeId) {
		this.typeId = typeId;
	}

	@Column(name = "sku", length = 64)
	public String getSku() {
		return this.sku;
	}

	public void setSku(String sku) {
		this.sku = sku;
	}

	@Column(name = "tax_class_id")
	public Integer getTaxClassId() {
		return this.taxClassId;
	}

	public void setTaxClassId(Integer taxClassId) {
		this.taxClassId = taxClassId;
	}

	@Column(name = "price", precision = 12, scale = 4)
	public double getPrice() {
		return this.price;
	}

	public void setPrice(double price) {
		this.price = price;
	}

	@Column(name = "material")
	public String getMaterial() {
		return this.material;
	}

	public void setMaterial(String material) {
		this.material = material;
	}

	@Column(name = "climate")
	public String getClimate() {
		return this.climate;
	}

	public void setClimate(String climate) {
		this.climate = climate;
	}

	@Column(name = "pattern")
	public String getPattern() {
		return this.pattern;
	}

	public void setPattern(String pattern) {
		this.pattern = pattern;
	}

	@Column(name = "collar")
	public String getCollar() {
		return this.collar;
	}

	public void setCollar(String collar) {
		this.collar = collar;
	}

	@Column(name = "sleeve")
	public String getSleeve() {
		return this.sleeve;
	}

	public void setSleeve(String sleeve) {
		this.sleeve = sleeve;
	}

	@Column(name = "active")
	public String getActive() {
		return this.active;
	}

	public void setActive(String active) {
		this.active = active;
	}

	@Column(name = "weight", precision = 12, scale = 4)
	public BigDecimal getWeight() {
		return this.weight;
	}

	public void setWeight(BigDecimal weight) {
		this.weight = weight;
	}

	@Column(name = "manufacturer")
	public Integer getManufacturer() {
		return this.manufacturer;
	}

	public void setManufacturer(Integer manufacturer) {
		this.manufacturer = manufacturer;
	}

	@Column(name = "manufacturer_value")
	public String getManufacturerValue() {
		return this.manufacturerValue;
	}

	public void setManufacturerValue(String manufacturerValue) {
		this.manufacturerValue = manufacturerValue;
	}

	@Column(name = "meta_description")
	public String getMetaDescription() {
		return this.metaDescription;
	}

	public void setMetaDescription(String metaDescription) {
		this.metaDescription = metaDescription;
	}

	@Column(name = "meta_keyword", length = 65535)
	public String getMetaKeyword() {
		return this.metaKeyword;
	}

	public void setMetaKeyword(String metaKeyword) {
		this.metaKeyword = metaKeyword;
	}

	@Column(name = "meta_title")
	public String getMetaTitle() {
		return this.metaTitle;
	}

	public void setMetaTitle(String metaTitle) {
		this.metaTitle = metaTitle;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "url_key")
	public String getUrlKey() {
		return this.urlKey;
	}

	public void setUrlKey(String urlKey) {
		this.urlKey = urlKey;
	}

	@Column(name = "url_path")
	public String getUrlPath() {
		return this.urlPath;
	}

	public void setUrlPath(String urlPath) {
		this.urlPath = urlPath;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "is_new")
	public Short getIsNew() {
		return this.isNew;
	}

	public void setIsNew(Short isNew) {
		this.isNew = isNew;
	}

	@Column(name = "status")
	public Short getStatus() {
		return this.status;
	}

	public void setStatus(Short status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "news_from_date", length = 19)
	public Date getNewsFromDate() {
		return this.newsFromDate;
	}

	public void setNewsFromDate(Date newsFromDate) {
		this.newsFromDate = newsFromDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "news_to_date", length = 19)
	public Date getNewsToDate() {
		return this.newsToDate;
	}

	public void setNewsToDate(Date newsToDate) {
		this.newsToDate = newsToDate;
	}

	@Column(name = "color")
	public Integer getColor() {
		return this.color;
	}

	public void setColor(Integer color) {
		this.color = color;
	}

	@Column(name = "color_value")
	public String getColorValue() {
		return this.colorValue;
	}

	public void setColorValue(String colorValue) {
		this.colorValue = colorValue;
	}

	@Column(name = "size")
	public Integer getSize() {
		return this.size;
	}

	public void setSize(Integer size) {
		this.size = size;
	}

	@Column(name = "size_value")
	public String getSizeValue() {
		return this.sizeValue;
	}

	public void setSizeValue(String sizeValue) {
		this.sizeValue = sizeValue;
	}

	@Column(name = "image")
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@Column(name = "image_label")
	public String getImageLabel() {
		return this.imageLabel;
	}

	public void setImageLabel(String imageLabel) {
		this.imageLabel = imageLabel;
	}

	@Column(name = "sale")
	public Short getSale() {
		return this.sale;
	}

	public void setSale(Short sale) {
		this.sale = sale;
	}

	@Column(name = "special_price", precision = 12, scale = 4)
	public double getSpecialPrice() {
		return this.specialPrice;
	}

	public void setSpecialPrice(double specialPrice) {
		this.specialPrice = specialPrice;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "special_from_date", length = 19)
	public Date getSpecialFromDate() {
		return this.specialFromDate;
	}

	public void setSpecialFromDate(Date specialFromDate) {
		this.specialFromDate = specialFromDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "special_to_date", length = 19)
	public Date getSpecialToDate() {
		return this.specialToDate;
	}

	public void setSpecialToDate(Date specialToDate) {
		this.specialToDate = specialToDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<SalesBestsellersAggregatedYearly> getSalesBestsellersAggregatedYearlies() {
		return this.salesBestsellersAggregatedYearlies;
	}

	public void setSalesBestsellersAggregatedYearlies(
			Set<SalesBestsellersAggregatedYearly> salesBestsellersAggregatedYearlies) {
		this.salesBestsellersAggregatedYearlies = salesBestsellersAggregatedYearlies;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "catalog_product_relation", catalog = "lovefashion", joinColumns = {
			@JoinColumn(name = "child_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "parent_id", nullable = false, updatable = false) })
	public Set<CatalogProductEntity> getCatalogProductEntitiesForParentId() {
		return this.catalogProductEntitiesForParentId;
	}

	public void setCatalogProductEntitiesForParentId(Set<CatalogProductEntity> catalogProductEntitiesForParentId) {
		this.catalogProductEntitiesForParentId = catalogProductEntitiesForParentId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<SalesBestsellersAggregatedMonthly> getSalesBestsellersAggregatedMonthlies() {
		return this.salesBestsellersAggregatedMonthlies;
	}

	public void setSalesBestsellersAggregatedMonthlies(
			Set<SalesBestsellersAggregatedMonthly> salesBestsellersAggregatedMonthlies) {
		this.salesBestsellersAggregatedMonthlies = salesBestsellersAggregatedMonthlies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CatalogProductEntityGallery> getCatalogProductEntityGalleries() {
		return this.catalogProductEntityGalleries;
	}

	public void setCatalogProductEntityGalleries(Set<CatalogProductEntityGallery> catalogProductEntityGalleries) {
		this.catalogProductEntityGalleries = catalogProductEntityGalleries;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<SalesBestsellersAggregatedDaily> getSalesBestsellersAggregatedDailies() {
		return this.salesBestsellersAggregatedDailies;
	}

	public void setSalesBestsellersAggregatedDailies(
			Set<SalesBestsellersAggregatedDaily> salesBestsellersAggregatedDailies) {
		this.salesBestsellersAggregatedDailies = salesBestsellersAggregatedDailies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CataloginventoryStockStatus> getCataloginventoryStockStatuses() {
		return this.cataloginventoryStockStatuses;
	}

	public void setCataloginventoryStockStatuses(Set<CataloginventoryStockStatus> cataloginventoryStockStatuses) {
		this.cataloginventoryStockStatuses = cataloginventoryStockStatuses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<WishlistItem> getWishlistItems() {
		return this.wishlistItems;
	}

	public void setWishlistItems(Set<WishlistItem> wishlistItems) {
		this.wishlistItems = wishlistItems;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "catalog_product_relation", catalog = "lovefashion", joinColumns = {
			@JoinColumn(name = "parent_id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "child_id", nullable = false, updatable = false) })
	public Set<CatalogProductEntity> getCatalogProductEntitiesForChildId() {
		return this.catalogProductEntitiesForChildId;
	}

	public void setCatalogProductEntitiesForChildId(Set<CatalogProductEntity> catalogProductEntitiesForChildId) {
		this.catalogProductEntitiesForChildId = catalogProductEntitiesForChildId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntity")
	public Set<CataloginventoryStockItem> getCataloginventoryStockItems() {
		return this.cataloginventoryStockItems;
	}

	public void setCataloginventoryStockItems(Set<CataloginventoryStockItem> cataloginventoryStockItems) {
		this.cataloginventoryStockItems = cataloginventoryStockItems;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "catalogProductEntitys")
	public Set<CatalogCategoryEntity> getCatalogCategoryEntities() {
		return catalogCategoryEntities;
	}

	public void setCatalogCategoryEntities(
			Set<CatalogCategoryEntity> catalogCategoryEntities) {
		this.catalogCategoryEntities = catalogCategoryEntities;
	}

}
