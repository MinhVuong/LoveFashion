package com.example.entity;
// Generated Dec 19, 2015 11:20:12 PM by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * CataloginventoryStockItem generated by hbm2java
 */
@Entity
@Table(name = "cataloginventory_stock_item", catalog = "lovefashion", uniqueConstraints = @UniqueConstraint(columnNames = {
		"product_id", "stock_id" }) )
public class CataloginventoryStockItem implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer itemId;
	private CatalogProductEntity catalogProductEntity;
	private CataloginventoryStock cataloginventoryStock;
	private BigDecimal qty;
	private BigDecimal minQty;
	private BigDecimal minSaleQty;
	private BigDecimal maxSaleQty;
	private short isInStock;
	private BigDecimal notifyStockQty;

	public CataloginventoryStockItem() {
	}

	public CataloginventoryStockItem(CatalogProductEntity catalogProductEntity,
			CataloginventoryStock cataloginventoryStock, BigDecimal qty, BigDecimal minQty, BigDecimal minSaleQty,
			BigDecimal maxSaleQty, short isInStock) {
		this.catalogProductEntity = catalogProductEntity;
		this.cataloginventoryStock = cataloginventoryStock;
		this.qty = qty;
		this.minQty = minQty;
		this.minSaleQty = minSaleQty;
		this.maxSaleQty = maxSaleQty;
		this.isInStock = isInStock;
	}

	public CataloginventoryStockItem(CatalogProductEntity catalogProductEntity,
			CataloginventoryStock cataloginventoryStock, BigDecimal qty, BigDecimal minQty, BigDecimal minSaleQty,
			BigDecimal maxSaleQty, short isInStock, BigDecimal notifyStockQty) {
		this.catalogProductEntity = catalogProductEntity;
		this.cataloginventoryStock = cataloginventoryStock;
		this.qty = qty;
		this.minQty = minQty;
		this.minSaleQty = minSaleQty;
		this.maxSaleQty = maxSaleQty;
		this.isInStock = isInStock;
		this.notifyStockQty = notifyStockQty;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "item_id", unique = true, nullable = false)
	public Integer getItemId() {
		return this.itemId;
	}

	public void setItemId(Integer itemId) {
		this.itemId = itemId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id", nullable = false)
	public CatalogProductEntity getCatalogProductEntity() {
		return this.catalogProductEntity;
	}

	public void setCatalogProductEntity(CatalogProductEntity catalogProductEntity) {
		this.catalogProductEntity = catalogProductEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "stock_id", nullable = false)
	public CataloginventoryStock getCataloginventoryStock() {
		return this.cataloginventoryStock;
	}

	public void setCataloginventoryStock(CataloginventoryStock cataloginventoryStock) {
		this.cataloginventoryStock = cataloginventoryStock;
	}

	@Column(name = "qty", nullable = false, precision = 12, scale = 4)
	public BigDecimal getQty() {
		return this.qty;
	}

	public void setQty(BigDecimal qty) {
		this.qty = qty;
	}

	@Column(name = "min_qty", nullable = false, precision = 12, scale = 4)
	public BigDecimal getMinQty() {
		return this.minQty;
	}

	public void setMinQty(BigDecimal minQty) {
		this.minQty = minQty;
	}

	@Column(name = "min_sale_qty", nullable = false, precision = 12, scale = 4)
	public BigDecimal getMinSaleQty() {
		return this.minSaleQty;
	}

	public void setMinSaleQty(BigDecimal minSaleQty) {
		this.minSaleQty = minSaleQty;
	}

	@Column(name = "max_sale_qty", nullable = false, precision = 12, scale = 4)
	public BigDecimal getMaxSaleQty() {
		return this.maxSaleQty;
	}

	public void setMaxSaleQty(BigDecimal maxSaleQty) {
		this.maxSaleQty = maxSaleQty;
	}

	@Column(name = "is_in_stock", nullable = false)
	public short getIsInStock() {
		return this.isInStock;
	}

	public void setIsInStock(short isInStock) {
		this.isInStock = isInStock;
	}

	@Column(name = "notify_stock_qty", precision = 12, scale = 4)
	public BigDecimal getNotifyStockQty() {
		return this.notifyStockQty;
	}

	public void setNotifyStockQty(BigDecimal notifyStockQty) {
		this.notifyStockQty = notifyStockQty;
	}

}
