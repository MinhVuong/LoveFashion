package com.example.entity;
// Generated Dec 19, 2015 11:20:12 PM by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Store generated by hbm2java
 */
@Entity
@Table(name = "store", catalog = "lovefashion")
public class Store implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Short storeId;
	private StoreGroup storeGroup;
	private String name;
	private short sortOrder;
	private short isActive;
	private Set<SalesInvoice> salesInvoices = new HashSet<SalesInvoice>(0);
	private Set<SalesOrderItem> salesOrderItems = new HashSet<SalesOrderItem>(0);
	private Set<SalesShipment> salesShipments = new HashSet<SalesShipment>(0);
	private Set<SalesOrder> salesOrders = new HashSet<SalesOrder>(0);
	private Set<Sitemap> sitemaps = new HashSet<Sitemap>(0);
	private Set<SalesCreditmemo> salesCreditmemos = new HashSet<SalesCreditmemo>(0);
	private Set<SalesBestsellersAggregatedYearly> salesBestsellersAggregatedYearlies = new HashSet<SalesBestsellersAggregatedYearly>(
			0);
	private Set<SalesBestsellersAggregatedDaily> salesBestsellersAggregatedDailies = new HashSet<SalesBestsellersAggregatedDaily>(
			0);
	private Set<SalesBestsellersAggregatedMonthly> salesBestsellersAggregatedMonthlies = new HashSet<SalesBestsellersAggregatedMonthly>(
			0);

	public Store() {
	}

	public Store(StoreGroup storeGroup, String name, short sortOrder, short isActive) {
		this.storeGroup = storeGroup;
		this.name = name;
		this.sortOrder = sortOrder;
		this.isActive = isActive;
	}

	public Store(StoreGroup storeGroup, String name, short sortOrder, short isActive, Set<SalesInvoice> salesInvoices,
			Set<SalesOrderItem> salesOrderItems, Set<SalesShipment> salesShipments, Set<SalesOrder> salesOrders,
			Set<Sitemap> sitemaps, Set<SalesCreditmemo> salesCreditmemos,
			Set<SalesBestsellersAggregatedYearly> salesBestsellersAggregatedYearlies,
			Set<SalesBestsellersAggregatedDaily> salesBestsellersAggregatedDailies,
			Set<SalesBestsellersAggregatedMonthly> salesBestsellersAggregatedMonthlies) {
		this.storeGroup = storeGroup;
		this.name = name;
		this.sortOrder = sortOrder;
		this.isActive = isActive;
		this.salesInvoices = salesInvoices;
		this.salesOrderItems = salesOrderItems;
		this.salesShipments = salesShipments;
		this.salesOrders = salesOrders;
		this.sitemaps = sitemaps;
		this.salesCreditmemos = salesCreditmemos;
		this.salesBestsellersAggregatedYearlies = salesBestsellersAggregatedYearlies;
		this.salesBestsellersAggregatedDailies = salesBestsellersAggregatedDailies;
		this.salesBestsellersAggregatedMonthlies = salesBestsellersAggregatedMonthlies;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "store_id", unique = true, nullable = false)
	public Short getStoreId() {
		return this.storeId;
	}

	public void setStoreId(Short storeId) {
		this.storeId = storeId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "group_id", nullable = false)
	public StoreGroup getStoreGroup() {
		return this.storeGroup;
	}

	public void setStoreGroup(StoreGroup storeGroup) {
		this.storeGroup = storeGroup;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "sort_order", nullable = false)
	public short getSortOrder() {
		return this.sortOrder;
	}

	public void setSortOrder(short sortOrder) {
		this.sortOrder = sortOrder;
	}

	@Column(name = "is_active", nullable = false)
	public short getIsActive() {
		return this.isActive;
	}

	public void setIsActive(short isActive) {
		this.isActive = isActive;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<SalesInvoice> getSalesInvoices() {
		return this.salesInvoices;
	}

	public void setSalesInvoices(Set<SalesInvoice> salesInvoices) {
		this.salesInvoices = salesInvoices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<SalesOrderItem> getSalesOrderItems() {
		return this.salesOrderItems;
	}

	public void setSalesOrderItems(Set<SalesOrderItem> salesOrderItems) {
		this.salesOrderItems = salesOrderItems;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<SalesShipment> getSalesShipments() {
		return this.salesShipments;
	}

	public void setSalesShipments(Set<SalesShipment> salesShipments) {
		this.salesShipments = salesShipments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<SalesOrder> getSalesOrders() {
		return this.salesOrders;
	}

	public void setSalesOrders(Set<SalesOrder> salesOrders) {
		this.salesOrders = salesOrders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<Sitemap> getSitemaps() {
		return this.sitemaps;
	}

	public void setSitemaps(Set<Sitemap> sitemaps) {
		this.sitemaps = sitemaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<SalesCreditmemo> getSalesCreditmemos() {
		return this.salesCreditmemos;
	}

	public void setSalesCreditmemos(Set<SalesCreditmemo> salesCreditmemos) {
		this.salesCreditmemos = salesCreditmemos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<SalesBestsellersAggregatedYearly> getSalesBestsellersAggregatedYearlies() {
		return this.salesBestsellersAggregatedYearlies;
	}

	public void setSalesBestsellersAggregatedYearlies(
			Set<SalesBestsellersAggregatedYearly> salesBestsellersAggregatedYearlies) {
		this.salesBestsellersAggregatedYearlies = salesBestsellersAggregatedYearlies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<SalesBestsellersAggregatedDaily> getSalesBestsellersAggregatedDailies() {
		return this.salesBestsellersAggregatedDailies;
	}

	public void setSalesBestsellersAggregatedDailies(
			Set<SalesBestsellersAggregatedDaily> salesBestsellersAggregatedDailies) {
		this.salesBestsellersAggregatedDailies = salesBestsellersAggregatedDailies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "store")
	public Set<SalesBestsellersAggregatedMonthly> getSalesBestsellersAggregatedMonthlies() {
		return this.salesBestsellersAggregatedMonthlies;
	}

	public void setSalesBestsellersAggregatedMonthlies(
			Set<SalesBestsellersAggregatedMonthly> salesBestsellersAggregatedMonthlies) {
		this.salesBestsellersAggregatedMonthlies = salesBestsellersAggregatedMonthlies;
	}

}
