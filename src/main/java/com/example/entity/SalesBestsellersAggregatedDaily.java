package com.example.entity;
// Generated Dec 19, 2015 11:20:12 PM by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * SalesBestsellersAggregatedDaily generated by hbm2java
 */
@Entity
@Table(name = "sales_bestsellers_aggregated_daily", catalog = "lovefashion", uniqueConstraints = @UniqueConstraint(columnNames = {
		"period", "store_id", "product_id" }) )
public class SalesBestsellersAggregatedDaily implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private CatalogProductEntity catalogProductEntity;
	private Store store;
	private Date period;
	private String productName;
	private BigDecimal productPrice;
	private BigDecimal qtyOrdered;

	public SalesBestsellersAggregatedDaily() {
	}

	public SalesBestsellersAggregatedDaily(BigDecimal productPrice, BigDecimal qtyOrdered) {
		this.productPrice = productPrice;
		this.qtyOrdered = qtyOrdered;
	}

	public SalesBestsellersAggregatedDaily(CatalogProductEntity catalogProductEntity, Store store, Date period,
			String productName, BigDecimal productPrice, BigDecimal qtyOrdered) {
		this.catalogProductEntity = catalogProductEntity;
		this.store = store;
		this.period = period;
		this.productName = productName;
		this.productPrice = productPrice;
		this.qtyOrdered = qtyOrdered;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "product_id")
	public CatalogProductEntity getCatalogProductEntity() {
		return this.catalogProductEntity;
	}

	public void setCatalogProductEntity(CatalogProductEntity catalogProductEntity) {
		this.catalogProductEntity = catalogProductEntity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "store_id")
	public Store getStore() {
		return this.store;
	}

	public void setStore(Store store) {
		this.store = store;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "period", length = 10)
	public Date getPeriod() {
		return this.period;
	}

	public void setPeriod(Date period) {
		this.period = period;
	}

	@Column(name = "product_name")
	public String getProductName() {
		return this.productName;
	}

	public void setProductName(String productName) {
		this.productName = productName;
	}

	@Column(name = "product_price", nullable = false, precision = 12, scale = 4)
	public BigDecimal getProductPrice() {
		return this.productPrice;
	}

	public void setProductPrice(BigDecimal productPrice) {
		this.productPrice = productPrice;
	}

	@Column(name = "qty_ordered", nullable = false, precision = 12, scale = 4)
	public BigDecimal getQtyOrdered() {
		return this.qtyOrdered;
	}

	public void setQtyOrdered(BigDecimal qtyOrdered) {
		this.qtyOrdered = qtyOrdered;
	}

}
