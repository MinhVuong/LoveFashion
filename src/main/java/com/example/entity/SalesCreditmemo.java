package com.example.entity;
// Generated Dec 19, 2015 11:20:12 PM by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SalesCreditmemo generated by hbm2java
 */
@Entity
@Table(name = "sales_creditmemo", catalog = "lovefashion")
public class SalesCreditmemo implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer entityId;
	private SalesOrder salesOrder;
	private Store store;
	private BigDecimal grandTotal;
	private BigDecimal shippingAmount;
	private BigDecimal subtotalInclTax;
	private BigDecimal discountAmount;
	private BigDecimal subtotal;
	private BigDecimal taxAmount;
	private Integer state;
	private Integer shippingAddressId;
	private Integer billingAddressId;
	private Integer invoiceId;
	private Date createdAt;
	private Date updatedAt;
	private Set<SalesCreditmemoItem> salesCreditmemoItems = new HashSet<SalesCreditmemoItem>(0);

	public SalesCreditmemo() {
	}

	public SalesCreditmemo(SalesOrder salesOrder) {
		this.salesOrder = salesOrder;
	}

	public SalesCreditmemo(SalesOrder salesOrder, Store store, BigDecimal grandTotal, BigDecimal shippingAmount,
			BigDecimal subtotalInclTax, BigDecimal discountAmount, BigDecimal subtotal, BigDecimal taxAmount,
			Integer state, Integer shippingAddressId, Integer billingAddressId, Integer invoiceId, Date createdAt,
			Date updatedAt, Set<SalesCreditmemoItem> salesCreditmemoItems) {
		this.salesOrder = salesOrder;
		this.store = store;
		this.grandTotal = grandTotal;
		this.shippingAmount = shippingAmount;
		this.subtotalInclTax = subtotalInclTax;
		this.discountAmount = discountAmount;
		this.subtotal = subtotal;
		this.taxAmount = taxAmount;
		this.state = state;
		this.shippingAddressId = shippingAddressId;
		this.billingAddressId = billingAddressId;
		this.invoiceId = invoiceId;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.salesCreditmemoItems = salesCreditmemoItems;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "entity_id", unique = true, nullable = false)
	public Integer getEntityId() {
		return this.entityId;
	}

	public void setEntityId(Integer entityId) {
		this.entityId = entityId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_id", nullable = false)
	public SalesOrder getSalesOrder() {
		return this.salesOrder;
	}

	public void setSalesOrder(SalesOrder salesOrder) {
		this.salesOrder = salesOrder;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "store_id")
	public Store getStore() {
		return this.store;
	}

	public void setStore(Store store) {
		this.store = store;
	}

	@Column(name = "grand_total", precision = 12, scale = 4)
	public BigDecimal getGrandTotal() {
		return this.grandTotal;
	}

	public void setGrandTotal(BigDecimal grandTotal) {
		this.grandTotal = grandTotal;
	}

	@Column(name = "shipping_amount", precision = 12, scale = 4)
	public BigDecimal getShippingAmount() {
		return this.shippingAmount;
	}

	public void setShippingAmount(BigDecimal shippingAmount) {
		this.shippingAmount = shippingAmount;
	}

	@Column(name = "subtotal_incl_tax", precision = 12, scale = 4)
	public BigDecimal getSubtotalInclTax() {
		return this.subtotalInclTax;
	}

	public void setSubtotalInclTax(BigDecimal subtotalInclTax) {
		this.subtotalInclTax = subtotalInclTax;
	}

	@Column(name = "discount_amount", precision = 12, scale = 4)
	public BigDecimal getDiscountAmount() {
		return this.discountAmount;
	}

	public void setDiscountAmount(BigDecimal discountAmount) {
		this.discountAmount = discountAmount;
	}

	@Column(name = "subtotal", precision = 12, scale = 4)
	public BigDecimal getSubtotal() {
		return this.subtotal;
	}

	public void setSubtotal(BigDecimal subtotal) {
		this.subtotal = subtotal;
	}

	@Column(name = "tax_amount", precision = 12, scale = 4)
	public BigDecimal getTaxAmount() {
		return this.taxAmount;
	}

	public void setTaxAmount(BigDecimal taxAmount) {
		this.taxAmount = taxAmount;
	}

	@Column(name = "state")
	public Integer getState() {
		return this.state;
	}

	public void setState(Integer state) {
		this.state = state;
	}

	@Column(name = "shipping_address_id")
	public Integer getShippingAddressId() {
		return this.shippingAddressId;
	}

	public void setShippingAddressId(Integer shippingAddressId) {
		this.shippingAddressId = shippingAddressId;
	}

	@Column(name = "billing_address_id")
	public Integer getBillingAddressId() {
		return this.billingAddressId;
	}

	public void setBillingAddressId(Integer billingAddressId) {
		this.billingAddressId = billingAddressId;
	}

	@Column(name = "invoice_id")
	public Integer getInvoiceId() {
		return this.invoiceId;
	}

	public void setInvoiceId(Integer invoiceId) {
		this.invoiceId = invoiceId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "salesCreditmemo")
	public Set<SalesCreditmemoItem> getSalesCreditmemoItems() {
		return this.salesCreditmemoItems;
	}

	public void setSalesCreditmemoItems(Set<SalesCreditmemoItem> salesCreditmemoItems) {
		this.salesCreditmemoItems = salesCreditmemoItems;
	}

}
